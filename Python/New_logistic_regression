{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "id": "faef2197",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Ratio of All Patients with Low Engraftment: 0.542\n",
      "Ratio of Cohort 1 and 3 Patients with Low Engraftment: 0.526\n"
     ]
    }
   ],
   "source": [
    "%run Prep_CART_data.ipynb"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "id": "87606165",
   "metadata": {},
   "outputs": [],
   "source": [
    "from scipy.special import expit\n",
    "from sklearn.metrics import roc_curve, auc\n",
    "from sklearn.metrics import RocCurveDisplay\n",
    "from sklearn.metrics import confusion_matrix\n",
    "from sklearn.metrics import ConfusionMatrixDisplay\n",
    "from sklearn.metrics import precision_recall_curve\n",
    "from sklearn.metrics import PrecisionRecallDisplay"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "id": "1f80920f",
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "{'C': 0.01, 'penalty': 'l2', 'solver': 'liblinear'}\n"
     ]
    }
   ],
   "source": [
    "def tune_logistic(final_data):\n",
    "    model = LogisticRegression()\n",
    "    \n",
    "    X = np.array(final_data['PCA_0'])\n",
    "    y = np.array(final_data.iloc[:,-1])\n",
    "    \n",
    "    solvers = ['lbfgs', 'liblinear', 'saga']\n",
    "    penalty = ['l2']\n",
    "    c_values = [100, 10, 1.0, 0.1, 0.01]\n",
    "\n",
    "    grid = dict(solver=solvers,penalty=penalty,C=c_values)\n",
    "    cv = RepeatedStratifiedKFold(n_splits=3, n_repeats=3, random_state=1)\n",
    "    grid_search = GridSearchCV(estimator=model, param_grid=grid, n_jobs=-1, cv=cv, scoring='accuracy',\n",
    "                               error_score=0)\n",
    "    grid_result = grid_search.fit(X.reshape(-1, 1), y)\n",
    "\n",
    "    #print(\"Best: %f using %s\" % (grid_result.best_score_, grid_result.best_params_))\n",
    "    #means = grid_result.cv_results_['mean_test_score']\n",
    "    #stds = grid_result.cv_results_['std_test_score']\n",
    "    #params = grid_result.cv_results_['params']\n",
    "    #for mean, stdev, param in zip(means, stds, params):\n",
    "     #   print(\"%f (%f) with: %r\" % (mean, stdev, param))\n",
    "        \n",
    "    #GridSearch_figs(grid_result.cv_results_)\n",
    "    return grid_result.cv_results_, grid_result.best_params_\n",
    "\n",
    "ww, all_cohort_bestParams = tune_logistic(FinalData_all_cohort)\n",
    "ss, two_cohort_bestParams = tune_logistic(FinalData_two_cohort)\n",
    "print(all_cohort_bestParams)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "1c5161aa",
   "metadata": {},
   "outputs": [
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "coloraxis": "coloraxis",
         "hovertemplate": "x: %{x}<br>y: %{y}<br>color: %{z}<extra></extra>",
         "name": "0",
         "type": "heatmap",
         "x": [
          "100",
          "10",
          "1.0",
          "0.1",
          "0.01"
         ],
         "xaxis": "x",
         "y": [
          "lbfgs",
          "liblinear",
          "saga"
         ],
         "yaxis": "y",
         "z": [
          [
           0.6805555555555556,
           0.6805555555555556,
           0.6805555555555556,
           0.6805555555555556,
           0.6805555555555556
          ],
          [
           0.6805555555555556,
           0.6805555555555556,
           0.6944444444444444,
           0.7222222222222222,
           0.75
          ],
          [
           0.7361111111111112,
           0.7222222222222222,
           0.7361111111111112,
           0.7222222222222222,
           0.75
          ]
         ]
        }
       ],
       "layout": {
        "coloraxis": {
         "colorscale": [
          [
           0,
           "rgb(5,48,97)"
          ],
          [
           0.1,
           "rgb(33,102,172)"
          ],
          [
           0.2,
           "rgb(67,147,195)"
          ],
          [
           0.3,
           "rgb(146,197,222)"
          ],
          [
           0.4,
           "rgb(209,229,240)"
          ],
          [
           0.5,
           "rgb(247,247,247)"
          ],
          [
           0.6,
           "rgb(253,219,199)"
          ],
          [
           0.7,
           "rgb(244,165,130)"
          ],
          [
           0.8,
           "rgb(214,96,77)"
          ],
          [
           0.9,
           "rgb(178,24,43)"
          ],
          [
           1,
           "rgb(103,0,31)"
          ]
         ]
        },
        "margin": {
         "t": 60
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "xaxis": {
         "anchor": "y",
         "constrain": "domain",
         "domain": [
          0,
          1
         ],
         "scaleanchor": "y"
        },
        "yaxis": {
         "anchor": "x",
         "autorange": "reversed",
         "constrain": "domain",
         "domain": [
          0,
          1
         ]
        }
       }
      },
      "text/html": [
       "<div>                            <div id=\"cdb8ffa5-20a9-47ef-a392-fa5023d2bd59\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"cdb8ffa5-20a9-47ef-a392-fa5023d2bd59\")) {                    Plotly.newPlot(                        \"cdb8ffa5-20a9-47ef-a392-fa5023d2bd59\",                        [{\"coloraxis\":\"coloraxis\",\"name\":\"0\",\"x\":[\"100\",\"10\",\"1.0\",\"0.1\",\"0.01\"],\"y\":[\"lbfgs\",\"liblinear\",\"saga\"],\"z\":[[0.6805555555555556,0.6805555555555556,0.6805555555555556,0.6805555555555556,0.6805555555555556],[0.6805555555555556,0.6805555555555556,0.6944444444444444,0.7222222222222222,0.75],[0.7361111111111112,0.7222222222222222,0.7361111111111112,0.7222222222222222,0.75]],\"type\":\"heatmap\",\"xaxis\":\"x\",\"yaxis\":\"y\",\"hovertemplate\":\"x: %{x}<br>y: %{y}<br>color: %{z}<extra></extra>\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"scaleanchor\":\"y\",\"constrain\":\"domain\"},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"autorange\":\"reversed\",\"constrain\":\"domain\"},\"coloraxis\":{\"colorscale\":[[0.0,\"rgb(5,48,97)\"],[0.1,\"rgb(33,102,172)\"],[0.2,\"rgb(67,147,195)\"],[0.3,\"rgb(146,197,222)\"],[0.4,\"rgb(209,229,240)\"],[0.5,\"rgb(247,247,247)\"],[0.6,\"rgb(253,219,199)\"],[0.7,\"rgb(244,165,130)\"],[0.8,\"rgb(214,96,77)\"],[0.9,\"rgb(178,24,43)\"],[1.0,\"rgb(103,0,31)\"]]},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('cdb8ffa5-20a9-47ef-a392-fa5023d2bd59');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    },
    {
     "data": {
      "application/vnd.plotly.v1+json": {
       "config": {
        "plotlyServerURL": "https://plot.ly"
       },
       "data": [
        {
         "hovertemplate": "Solver Parameter=lbfgs<br>C Parameter=%{x}<br>Mean Test Accuracy=%{y}<extra></extra>",
         "legendgroup": "lbfgs",
         "line": {
          "color": "#636efa",
          "dash": "solid"
         },
         "marker": {
          "symbol": "circle"
         },
         "mode": "lines",
         "name": "lbfgs",
         "orientation": "v",
         "showlegend": true,
         "type": "scatter",
         "x": [
          "100",
          "10",
          "1.0",
          "0.1",
          "0.01"
         ],
         "xaxis": "x",
         "y": [
          0.6805555555555556,
          0.6805555555555556,
          0.6805555555555556,
          0.6805555555555556,
          0.6805555555555556
         ],
         "yaxis": "y"
        },
        {
         "hovertemplate": "Solver Parameter=liblinear<br>C Parameter=%{x}<br>Mean Test Accuracy=%{y}<extra></extra>",
         "legendgroup": "liblinear",
         "line": {
          "color": "#EF553B",
          "dash": "solid"
         },
         "marker": {
          "symbol": "circle"
         },
         "mode": "lines",
         "name": "liblinear",
         "orientation": "v",
         "showlegend": true,
         "type": "scatter",
         "x": [
          "100",
          "10",
          "1.0",
          "0.1",
          "0.01"
         ],
         "xaxis": "x",
         "y": [
          0.6805555555555556,
          0.6805555555555556,
          0.6944444444444444,
          0.7222222222222222,
          0.75
         ],
         "yaxis": "y"
        },
        {
         "hovertemplate": "Solver Parameter=saga<br>C Parameter=%{x}<br>Mean Test Accuracy=%{y}<extra></extra>",
         "legendgroup": "saga",
         "line": {
          "color": "#00cc96",
          "dash": "solid"
         },
         "marker": {
          "symbol": "circle"
         },
         "mode": "lines",
         "name": "saga",
         "orientation": "v",
         "showlegend": true,
         "type": "scatter",
         "x": [
          "100",
          "10",
          "1.0",
          "0.1",
          "0.01"
         ],
         "xaxis": "x",
         "y": [
          0.7361111111111112,
          0.7222222222222222,
          0.7361111111111112,
          0.7222222222222222,
          0.75
         ],
         "yaxis": "y"
        }
       ],
       "layout": {
        "legend": {
         "title": {
          "text": "Solver Parameter"
         },
         "tracegroupgap": 0
        },
        "margin": {
         "t": 60
        },
        "template": {
         "data": {
          "bar": [
           {
            "error_x": {
             "color": "#2a3f5f"
            },
            "error_y": {
             "color": "#2a3f5f"
            },
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "bar"
           }
          ],
          "barpolar": [
           {
            "marker": {
             "line": {
              "color": "#E5ECF6",
              "width": 0.5
             },
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "barpolar"
           }
          ],
          "carpet": [
           {
            "aaxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "baxis": {
             "endlinecolor": "#2a3f5f",
             "gridcolor": "white",
             "linecolor": "white",
             "minorgridcolor": "white",
             "startlinecolor": "#2a3f5f"
            },
            "type": "carpet"
           }
          ],
          "choropleth": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "choropleth"
           }
          ],
          "contour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "contour"
           }
          ],
          "contourcarpet": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "contourcarpet"
           }
          ],
          "heatmap": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmap"
           }
          ],
          "heatmapgl": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "heatmapgl"
           }
          ],
          "histogram": [
           {
            "marker": {
             "pattern": {
              "fillmode": "overlay",
              "size": 10,
              "solidity": 0.2
             }
            },
            "type": "histogram"
           }
          ],
          "histogram2d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2d"
           }
          ],
          "histogram2dcontour": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "histogram2dcontour"
           }
          ],
          "mesh3d": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "type": "mesh3d"
           }
          ],
          "parcoords": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "parcoords"
           }
          ],
          "pie": [
           {
            "automargin": true,
            "type": "pie"
           }
          ],
          "scatter": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter"
           }
          ],
          "scatter3d": [
           {
            "line": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatter3d"
           }
          ],
          "scattercarpet": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattercarpet"
           }
          ],
          "scattergeo": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergeo"
           }
          ],
          "scattergl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattergl"
           }
          ],
          "scattermapbox": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scattermapbox"
           }
          ],
          "scatterpolar": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolar"
           }
          ],
          "scatterpolargl": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterpolargl"
           }
          ],
          "scatterternary": [
           {
            "marker": {
             "colorbar": {
              "outlinewidth": 0,
              "ticks": ""
             }
            },
            "type": "scatterternary"
           }
          ],
          "surface": [
           {
            "colorbar": {
             "outlinewidth": 0,
             "ticks": ""
            },
            "colorscale": [
             [
              0,
              "#0d0887"
             ],
             [
              0.1111111111111111,
              "#46039f"
             ],
             [
              0.2222222222222222,
              "#7201a8"
             ],
             [
              0.3333333333333333,
              "#9c179e"
             ],
             [
              0.4444444444444444,
              "#bd3786"
             ],
             [
              0.5555555555555556,
              "#d8576b"
             ],
             [
              0.6666666666666666,
              "#ed7953"
             ],
             [
              0.7777777777777778,
              "#fb9f3a"
             ],
             [
              0.8888888888888888,
              "#fdca26"
             ],
             [
              1,
              "#f0f921"
             ]
            ],
            "type": "surface"
           }
          ],
          "table": [
           {
            "cells": {
             "fill": {
              "color": "#EBF0F8"
             },
             "line": {
              "color": "white"
             }
            },
            "header": {
             "fill": {
              "color": "#C8D4E3"
             },
             "line": {
              "color": "white"
             }
            },
            "type": "table"
           }
          ]
         },
         "layout": {
          "annotationdefaults": {
           "arrowcolor": "#2a3f5f",
           "arrowhead": 0,
           "arrowwidth": 1
          },
          "autotypenumbers": "strict",
          "coloraxis": {
           "colorbar": {
            "outlinewidth": 0,
            "ticks": ""
           }
          },
          "colorscale": {
           "diverging": [
            [
             0,
             "#8e0152"
            ],
            [
             0.1,
             "#c51b7d"
            ],
            [
             0.2,
             "#de77ae"
            ],
            [
             0.3,
             "#f1b6da"
            ],
            [
             0.4,
             "#fde0ef"
            ],
            [
             0.5,
             "#f7f7f7"
            ],
            [
             0.6,
             "#e6f5d0"
            ],
            [
             0.7,
             "#b8e186"
            ],
            [
             0.8,
             "#7fbc41"
            ],
            [
             0.9,
             "#4d9221"
            ],
            [
             1,
             "#276419"
            ]
           ],
           "sequential": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ],
           "sequentialminus": [
            [
             0,
             "#0d0887"
            ],
            [
             0.1111111111111111,
             "#46039f"
            ],
            [
             0.2222222222222222,
             "#7201a8"
            ],
            [
             0.3333333333333333,
             "#9c179e"
            ],
            [
             0.4444444444444444,
             "#bd3786"
            ],
            [
             0.5555555555555556,
             "#d8576b"
            ],
            [
             0.6666666666666666,
             "#ed7953"
            ],
            [
             0.7777777777777778,
             "#fb9f3a"
            ],
            [
             0.8888888888888888,
             "#fdca26"
            ],
            [
             1,
             "#f0f921"
            ]
           ]
          },
          "colorway": [
           "#636efa",
           "#EF553B",
           "#00cc96",
           "#ab63fa",
           "#FFA15A",
           "#19d3f3",
           "#FF6692",
           "#B6E880",
           "#FF97FF",
           "#FECB52"
          ],
          "font": {
           "color": "#2a3f5f"
          },
          "geo": {
           "bgcolor": "white",
           "lakecolor": "white",
           "landcolor": "#E5ECF6",
           "showlakes": true,
           "showland": true,
           "subunitcolor": "white"
          },
          "hoverlabel": {
           "align": "left"
          },
          "hovermode": "closest",
          "mapbox": {
           "style": "light"
          },
          "paper_bgcolor": "white",
          "plot_bgcolor": "#E5ECF6",
          "polar": {
           "angularaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "radialaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "scene": {
           "xaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "yaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           },
           "zaxis": {
            "backgroundcolor": "#E5ECF6",
            "gridcolor": "white",
            "gridwidth": 2,
            "linecolor": "white",
            "showbackground": true,
            "ticks": "",
            "zerolinecolor": "white"
           }
          },
          "shapedefaults": {
           "line": {
            "color": "#2a3f5f"
           }
          },
          "ternary": {
           "aaxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "baxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           },
           "bgcolor": "#E5ECF6",
           "caxis": {
            "gridcolor": "white",
            "linecolor": "white",
            "ticks": ""
           }
          },
          "title": {
           "x": 0.05
          },
          "xaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          },
          "yaxis": {
           "automargin": true,
           "gridcolor": "white",
           "linecolor": "white",
           "ticks": "",
           "title": {
            "standoff": 15
           },
           "zerolinecolor": "white",
           "zerolinewidth": 2
          }
         }
        },
        "xaxis": {
         "anchor": "y",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "C Parameter"
         }
        },
        "yaxis": {
         "anchor": "x",
         "domain": [
          0,
          1
         ],
         "title": {
          "text": "Mean Test Accuracy"
         }
        }
       }
      },
      "text/html": [
       "<div>                            <div id=\"c6a98053-5f6c-4ea9-a467-2aad63d6f7dd\" class=\"plotly-graph-div\" style=\"height:525px; width:100%;\"></div>            <script type=\"text/javascript\">                require([\"plotly\"], function(Plotly) {                    window.PLOTLYENV=window.PLOTLYENV || {};                                    if (document.getElementById(\"c6a98053-5f6c-4ea9-a467-2aad63d6f7dd\")) {                    Plotly.newPlot(                        \"c6a98053-5f6c-4ea9-a467-2aad63d6f7dd\",                        [{\"hovertemplate\":\"Solver Parameter=lbfgs<br>C Parameter=%{x}<br>Mean Test Accuracy=%{y}<extra></extra>\",\"legendgroup\":\"lbfgs\",\"line\":{\"color\":\"#636efa\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"lbfgs\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"100\",\"10\",\"1.0\",\"0.1\",\"0.01\"],\"xaxis\":\"x\",\"y\":[0.6805555555555556,0.6805555555555556,0.6805555555555556,0.6805555555555556,0.6805555555555556],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"Solver Parameter=liblinear<br>C Parameter=%{x}<br>Mean Test Accuracy=%{y}<extra></extra>\",\"legendgroup\":\"liblinear\",\"line\":{\"color\":\"#EF553B\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"liblinear\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"100\",\"10\",\"1.0\",\"0.1\",\"0.01\"],\"xaxis\":\"x\",\"y\":[0.6805555555555556,0.6805555555555556,0.6944444444444444,0.7222222222222222,0.75],\"yaxis\":\"y\",\"type\":\"scatter\"},{\"hovertemplate\":\"Solver Parameter=saga<br>C Parameter=%{x}<br>Mean Test Accuracy=%{y}<extra></extra>\",\"legendgroup\":\"saga\",\"line\":{\"color\":\"#00cc96\",\"dash\":\"solid\"},\"marker\":{\"symbol\":\"circle\"},\"mode\":\"lines\",\"name\":\"saga\",\"orientation\":\"v\",\"showlegend\":true,\"x\":[\"100\",\"10\",\"1.0\",\"0.1\",\"0.01\"],\"xaxis\":\"x\",\"y\":[0.7361111111111112,0.7222222222222222,0.7361111111111112,0.7222222222222222,0.75],\"yaxis\":\"y\",\"type\":\"scatter\"}],                        {\"template\":{\"data\":{\"bar\":[{\"error_x\":{\"color\":\"#2a3f5f\"},\"error_y\":{\"color\":\"#2a3f5f\"},\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"bar\"}],\"barpolar\":[{\"marker\":{\"line\":{\"color\":\"#E5ECF6\",\"width\":0.5},\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"barpolar\"}],\"carpet\":[{\"aaxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"baxis\":{\"endlinecolor\":\"#2a3f5f\",\"gridcolor\":\"white\",\"linecolor\":\"white\",\"minorgridcolor\":\"white\",\"startlinecolor\":\"#2a3f5f\"},\"type\":\"carpet\"}],\"choropleth\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"choropleth\"}],\"contour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"contour\"}],\"contourcarpet\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"contourcarpet\"}],\"heatmap\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmap\"}],\"heatmapgl\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"heatmapgl\"}],\"histogram\":[{\"marker\":{\"pattern\":{\"fillmode\":\"overlay\",\"size\":10,\"solidity\":0.2}},\"type\":\"histogram\"}],\"histogram2d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2d\"}],\"histogram2dcontour\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"histogram2dcontour\"}],\"mesh3d\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"type\":\"mesh3d\"}],\"parcoords\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"parcoords\"}],\"pie\":[{\"automargin\":true,\"type\":\"pie\"}],\"scatter\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter\"}],\"scatter3d\":[{\"line\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatter3d\"}],\"scattercarpet\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattercarpet\"}],\"scattergeo\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergeo\"}],\"scattergl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattergl\"}],\"scattermapbox\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scattermapbox\"}],\"scatterpolar\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolar\"}],\"scatterpolargl\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterpolargl\"}],\"scatterternary\":[{\"marker\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"type\":\"scatterternary\"}],\"surface\":[{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"},\"colorscale\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"type\":\"surface\"}],\"table\":[{\"cells\":{\"fill\":{\"color\":\"#EBF0F8\"},\"line\":{\"color\":\"white\"}},\"header\":{\"fill\":{\"color\":\"#C8D4E3\"},\"line\":{\"color\":\"white\"}},\"type\":\"table\"}]},\"layout\":{\"annotationdefaults\":{\"arrowcolor\":\"#2a3f5f\",\"arrowhead\":0,\"arrowwidth\":1},\"autotypenumbers\":\"strict\",\"coloraxis\":{\"colorbar\":{\"outlinewidth\":0,\"ticks\":\"\"}},\"colorscale\":{\"diverging\":[[0,\"#8e0152\"],[0.1,\"#c51b7d\"],[0.2,\"#de77ae\"],[0.3,\"#f1b6da\"],[0.4,\"#fde0ef\"],[0.5,\"#f7f7f7\"],[0.6,\"#e6f5d0\"],[0.7,\"#b8e186\"],[0.8,\"#7fbc41\"],[0.9,\"#4d9221\"],[1,\"#276419\"]],\"sequential\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]],\"sequentialminus\":[[0.0,\"#0d0887\"],[0.1111111111111111,\"#46039f\"],[0.2222222222222222,\"#7201a8\"],[0.3333333333333333,\"#9c179e\"],[0.4444444444444444,\"#bd3786\"],[0.5555555555555556,\"#d8576b\"],[0.6666666666666666,\"#ed7953\"],[0.7777777777777778,\"#fb9f3a\"],[0.8888888888888888,\"#fdca26\"],[1.0,\"#f0f921\"]]},\"colorway\":[\"#636efa\",\"#EF553B\",\"#00cc96\",\"#ab63fa\",\"#FFA15A\",\"#19d3f3\",\"#FF6692\",\"#B6E880\",\"#FF97FF\",\"#FECB52\"],\"font\":{\"color\":\"#2a3f5f\"},\"geo\":{\"bgcolor\":\"white\",\"lakecolor\":\"white\",\"landcolor\":\"#E5ECF6\",\"showlakes\":true,\"showland\":true,\"subunitcolor\":\"white\"},\"hoverlabel\":{\"align\":\"left\"},\"hovermode\":\"closest\",\"mapbox\":{\"style\":\"light\"},\"paper_bgcolor\":\"white\",\"plot_bgcolor\":\"#E5ECF6\",\"polar\":{\"angularaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"radialaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"scene\":{\"xaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"yaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"},\"zaxis\":{\"backgroundcolor\":\"#E5ECF6\",\"gridcolor\":\"white\",\"gridwidth\":2,\"linecolor\":\"white\",\"showbackground\":true,\"ticks\":\"\",\"zerolinecolor\":\"white\"}},\"shapedefaults\":{\"line\":{\"color\":\"#2a3f5f\"}},\"ternary\":{\"aaxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"baxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"},\"bgcolor\":\"#E5ECF6\",\"caxis\":{\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\"}},\"title\":{\"x\":0.05},\"xaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2},\"yaxis\":{\"automargin\":true,\"gridcolor\":\"white\",\"linecolor\":\"white\",\"ticks\":\"\",\"title\":{\"standoff\":15},\"zerolinecolor\":\"white\",\"zerolinewidth\":2}}},\"xaxis\":{\"anchor\":\"y\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"C Parameter\"}},\"yaxis\":{\"anchor\":\"x\",\"domain\":[0.0,1.0],\"title\":{\"text\":\"Mean Test Accuracy\"}},\"legend\":{\"title\":{\"text\":\"Solver Parameter\"},\"tracegroupgap\":0},\"margin\":{\"t\":60}},                        {\"responsive\": true}                    ).then(function(){\n",
       "                            \n",
       "var gd = document.getElementById('c6a98053-5f6c-4ea9-a467-2aad63d6f7dd');\n",
       "var x = new MutationObserver(function (mutations, observer) {{\n",
       "        var display = window.getComputedStyle(gd).display;\n",
       "        if (!display || display === 'none') {{\n",
       "            console.log([gd, 'removed!']);\n",
       "            Plotly.purge(gd);\n",
       "            observer.disconnect();\n",
       "        }}\n",
       "}});\n",
       "\n",
       "// Listen for the removal of the full notebook cells\n",
       "var notebookContainer = gd.closest('#notebook-container');\n",
       "if (notebookContainer) {{\n",
       "    x.observe(notebookContainer, {childList: true});\n",
       "}}\n",
       "\n",
       "// Listen for the clearing of the current output cell\n",
       "var outputEl = gd.closest('.output');\n",
       "if (outputEl) {{\n",
       "    x.observe(outputEl, {childList: true});\n",
       "}}\n",
       "\n",
       "                        })                };                });            </script>        </div>"
      ]
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "def GridSearch_figs(grid_dict):\n",
    "    param_solver = grid_dict['param_solver']\n",
    "    param_C = grid_dict['param_C']\n",
    "    scores = grid_dict['mean_test_score']\n",
    "\n",
    "    df = pd.DataFrame()\n",
    "    for C in param_C:\n",
    "        temp_solvers = param_solver[param_C == C]\n",
    "        df['solver'] = temp_solvers\n",
    "        temp_scores = scores[param_C == C]\n",
    "        df[str(C)] = temp_scores\n",
    "    fig = px.imshow(df.iloc[:,1:], y = df['solver'], color_continuous_scale = px.colors.sequential.RdBu_r)\n",
    "    fig.show()\n",
    "    \n",
    "    lines_df = pd.DataFrame.from_dict(grid_dict)\n",
    "    lines_df['C Parameter'] = lines_df['param_C'].astype(str)\n",
    "    fig = px.line(lines_df, x = 'C Parameter', y = 'mean_test_score', color = lines_df['param_solver'],\n",
    "                  labels = {'mean_test_score' : 'Mean Test Accuracy', 'param_solver' : 'Solver Parameter'})\n",
    "    fig.show()\n",
    "\n",
    "GridSearch_figs(ww)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "id": "f4e2f879",
   "metadata": {},
   "outputs": [],
   "source": [
    "def logistic_regression(final_data, bestParams, dataType):\n",
    "    print(f'Best Parameters for {dataType}:', bestParams)\n",
    "    \n",
    "    X = np.array(final_data['PCA_0'])\n",
    "    y = np.array(final_data.iloc[:,-1])\n",
    "    \n",
    "    #splititng data in train and test\n",
    "    X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.33, stratify = y, random_state=42)\n",
    "\n",
    "    #creating and fitting classifier\n",
    "    LR_classifier = LogisticRegression(penalty = bestParams['penalty'], C = bestParams['C'],\n",
    "                                       solver = bestParams['solver'], random_state=0)\n",
    "\n",
    "    LR_classifier.fit(X_train.reshape(-1, 1), y_train)\n",
    "    \n",
    "    #predicting labels and getting probabilities\n",
    "    logistic_pred = LR_classifier.predict(X_test.reshape(-1, 1))\n",
    "    y_score = LR_classifier.decision_function(X_test.reshape(-1, 1))\n",
    "    print('True Labels:', y_test)\n",
    "    print('Predictions:', logistic_pred)\n",
    "    \n",
    "    #getting metrics of performance (accuracy, AUC)\n",
    "    accuracy = np.count_nonzero(logistic_pred == y_test)/len(y_test)\n",
    "    print(f'Accuracy for {dataType}: %0.2f' %accuracy)\n",
    "\n",
    "    fpr, tpr, _ = roc_curve(y_test, y_score, pos_label=LR_classifier.classes_[1])\n",
    "    auc = metrics.auc(fpr, tpr)\n",
    "    print(f'AUC for {dataType}: %0.2f' %auc)\n",
    "\n",
    "    #plotting logistic regression\n",
    "    plt.figure(1, figsize=(4, 3))\n",
    "    plt.scatter(X_test, y_test, color=\"black\")\n",
    "    w = np.linspace(-100, 100, 300)\n",
    "    probas = LR_classifier.predict_proba(w.reshape(-1, 1))[:,1]\n",
    "    #loss = expit(w * LR_classifier.coef_ + LR_classifier.intercept_).ravel()\n",
    "    plt.plot(w, probas, color=\"red\", linewidth=3)\n",
    "    #plt.scatter(X_test[4], y_test[4], color=\"red\", linewidth=3)\n",
    "    plt.ylabel(\"Engratment\")\n",
    "    plt.xlabel(\"PCA_0\")\n",
    "    plt.xlim(-100,100)\n",
    "    plt.show()\n",
    "\n",
    "    #ROC curve and precision-recall curve\n",
    "    roc_display = RocCurveDisplay(fpr=fpr, tpr=tpr).plot()\n",
    "    \n",
    "    prec, recall, _ = precision_recall_curve(y_test, y_score, pos_label=LR_classifier.classes_[1])\n",
    "    pr_display = PrecisionRecallDisplay(precision=prec, recall=recall).plot()\n",
    "    fig, (ax1, ax2) = plt.subplots(1, 2, figsize=(12, 8))\n",
    "\n",
    "    roc_display.plot(ax=ax1)\n",
    "    pr_display.plot(ax=ax2)\n",
    "    plt.show()\n",
    "    \n",
    "    #plot confusion matrix\n",
    "    cm = confusion_matrix(y_test, logistic_pred)\n",
    "    cm_display = ConfusionMatrixDisplay(cm).plot()\n",
    "\n",
    "#logistic_regression(FinalData_two_cohort, two_cohort_bestParams, 'Two Patients')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "id": "a6b9c08f",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best Parameters for All Patients: {'C': 0.01, 'penalty': 'l2', 'solver': 'liblinear'}\n",
      "True Labels: [0 0 1 0 0 1 1 1]\n",
      "Predictions: [0 0 1 0 1 1 1 1]\n",
      "Accuracy for All Patients: 0.88\n",
      "AUC for All Patients: 0.81\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "logistic_regression(FinalData_all_cohort, all_cohort_bestParams, 'All Patients')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "id": "0c2f037a",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Best Parameters for Cohorts 1 and 3: {'C': 0.01, 'penalty': 'l2', 'solver': 'liblinear'}\n",
      "True Labels: [0 1 0 1 0 0 1]\n",
      "Predictions: [0 0 1 1 0 0 1]\n",
      "Accuracy for Cohorts 1 and 3: 0.71\n",
      "AUC for Cohorts 1 and 3: 0.58\n"
     ]
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 288x216 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 864x576 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    },
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 2 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "logistic_regression(FinalData_two_cohort, two_cohort_bestParams, 'Cohorts 1 and 3')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "122381db",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.9.12"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
